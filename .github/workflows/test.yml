name: Test

on:
  #schedule:
     #Every day at 3AM UTC
    #- cron: "0 3 * * *"
  workflow_dispatch:

env:
    REPO_NAME_LATEST: xlion-rustdesk-latest-apt-repo
    REPO_NAME_NIGHTLY: xlion-rustdesk-nightly-apt-repo
    CODENAME: main
    COMPONENTS: main
    ARCHITECTURES: amd64 arm64 armhf i386
    # armhf is ARMv7 (32bit) 
  
jobs:
    build-latest:
      name: Build latest
      runs-on: ubuntu-latest
      container: ghcr.io/xlionjuan/fedora-createrepo-image:latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Download RustDesk
          run: dpkg-deb --build rustdesk-server-meta rustdesk-server-meta.deb & bash rustdesk_latest.sh & bash rustdesk-server_latest.sh

        - uses: xlionjuan/apt-repo-action@main
          id: create-apt-repo_latest
          with:
            repo-name: ${{ env.REPO_NAME_LATEST }}
            signing-key: ${{ secrets.SIGNING_KEY }}
            codename: ${{ env.CODENAME }}
            components: ${{ env.COMPONENTS }}
            architectures: ${{ env.ARCHITECTURES }}
            override: ./override # the location of the file within your repo, thats why checkout is needed before
        
        - name: Publish Artifacts
          uses: actions/upload-artifact@v4
          with:
            name: latest
            path: ${{ steps.create-apt-repo_latest.outputs.dir }}
            if-no-files-found: error


    build-nightly:
      name: Build nightly
      runs-on: ubuntu-latest
      container: ghcr.io/xlionjuan/fedora-createrepo-image:latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Download RustDesk
          run: bash rustdesk_nightly.sh

        - uses: xlionjuan/apt-repo-action@main
          id: create-apt-repo_nightly
          with:
            repo-name: ${{ env.REPO_NAME_NIGHTLY }}
            signing-key: ${{ secrets.SIGNING_KEY }}
            codename: ${{ env.CODENAME }}
            components: ${{ env.COMPONENTS }}
            architectures: ${{ env.ARCHITECTURES }}
        
        - name: Publish Artifacts
          uses: actions/upload-artifact@v4
          with:
            name: nightly
            path: ${{ steps.create-apt-repo_nightly.outputs.dir }}
            if-no-files-found: error